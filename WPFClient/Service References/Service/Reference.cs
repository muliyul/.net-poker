//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Blackjack.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/Service.Models")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MemberSinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bank {
            get {
                return this.BankField;
            }
            set {
                if ((this.BankField.Equals(value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((object.ReferenceEquals(this.GuidField, value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MemberSince {
            get {
                return this.MemberSinceField;
            }
            set {
                if ((this.MemberSinceField.Equals(value) != true)) {
                    this.MemberSinceField = value;
                    this.RaisePropertyChanged("MemberSince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Table", Namespace="http://schemas.datacontract.org/2004/07/Service.Models")]
    [System.SerializableAttribute()]
    public partial class Table : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blackjack.Service.Player[] PlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PotField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blackjack.Service.Player[] Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pot {
            get {
                return this.PotField;
            }
            set {
                if ((this.PotField.Equals(value) != true)) {
                    this.PotField = value;
                    this.RaisePropertyChanged("Pot");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Card", Namespace="http://schemas.datacontract.org/2004/07/Service.Models")]
    [System.SerializableAttribute()]
    public partial class Card : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blackjack.Service.Face FaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blackjack.Service.Suit SuitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blackjack.Service.Face Face {
            get {
                return this.FaceField;
            }
            set {
                if ((this.FaceField.Equals(value) != true)) {
                    this.FaceField = value;
                    this.RaisePropertyChanged("Face");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blackjack.Service.Suit Suit {
            get {
                return this.SuitField;
            }
            set {
                if ((this.SuitField.Equals(value) != true)) {
                    this.SuitField = value;
                    this.RaisePropertyChanged("Suit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Face", Namespace="http://schemas.datacontract.org/2004/07/Service.Models")]
    public enum Face : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Two = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Three = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Four = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Five = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Six = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Seven = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Eight = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nine = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ten = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jack = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Queen = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        King = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ace = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Suit", Namespace="http://schemas.datacontract.org/2004/07/Service.Models")]
    public enum Suit : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Spades = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hearts = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Clubs = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diamonds = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameArgs", Namespace="http://schemas.datacontract.org/2004/07/Service")]
    [System.SerializableAttribute()]
    public partial class GameArgs : System.EventArgs, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blackjack.Service.Card CardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blackjack.Service.Player PlayerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blackjack.Service.Card Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blackjack.Service.Player Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IGameService", CallbackContract=typeof(Blackjack.Service.IGameServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Register", ReplyAction="http://tempuri.org/IGameService/RegisterResponse")]
        void Register(string username, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Register", ReplyAction="http://tempuri.org/IGameService/RegisterResponse")]
        System.Threading.Tasks.Task RegisterAsync(string username, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Login", ReplyAction="http://tempuri.org/IGameService/LoginResponse")]
        Blackjack.Service.Player Login(string username, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Login", ReplyAction="http://tempuri.org/IGameService/LoginResponse")]
        System.Threading.Tasks.Task<Blackjack.Service.Player> LoginAsync(string username, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetPlayerInfo", ReplyAction="http://tempuri.org/IGameService/GetPlayerInfoResponse")]
        Blackjack.Service.Player GetPlayerInfo(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetPlayerInfo", ReplyAction="http://tempuri.org/IGameService/GetPlayerInfoResponse")]
        System.Threading.Tasks.Task<Blackjack.Service.Player> GetPlayerInfoAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/ListTables", ReplyAction="http://tempuri.org/IGameService/ListTablesResponse")]
        Blackjack.Service.Table[] ListTables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/ListTables", ReplyAction="http://tempuri.org/IGameService/ListTablesResponse")]
        System.Threading.Tasks.Task<Blackjack.Service.Table[]> ListTablesAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/CreateTable")]
        void CreateTable();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/CreateTable")]
        System.Threading.Tasks.Task CreateTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/JoinTable", ReplyAction="http://tempuri.org/IGameService/JoinTableResponse")]
        Blackjack.Service.Table JoinTable(string tableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/JoinTable", ReplyAction="http://tempuri.org/IGameService/JoinTableResponse")]
        System.Threading.Tasks.Task<Blackjack.Service.Table> JoinTableAsync(string tableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/PlayerReady", ReplyAction="http://tempuri.org/IGameService/PlayerReadyResponse")]
        Blackjack.Service.Table PlayerReady(string tableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/PlayerReady", ReplyAction="http://tempuri.org/IGameService/PlayerReadyResponse")]
        System.Threading.Tasks.Task<Blackjack.Service.Table> PlayerReadyAsync(string tableId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Leave")]
        void Leave();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Leave")]
        System.Threading.Tasks.Task LeaveAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Bet")]
        void Bet(int amount);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Bet")]
        System.Threading.Tasks.Task BetAsync(int amount);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Hit")]
        void Hit();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Hit")]
        System.Threading.Tasks.Task HitAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Fold")]
        void Fold();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Fold")]
        System.Threading.Tasks.Task FoldAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/OnJoin", ReplyAction="http://tempuri.org/IGameService/OnJoinResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Card))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Face))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Suit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.EventArgs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.GameArgs))]
        void OnJoin(object sender, Blackjack.Service.GameArgs e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/OnLeave", ReplyAction="http://tempuri.org/IGameService/OnLeaveResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Card))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Face))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Suit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.EventArgs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.GameArgs))]
        void OnLeave(object sender, Blackjack.Service.GameArgs e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/OnHit", ReplyAction="http://tempuri.org/IGameService/OnHitResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Card))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Face))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Suit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.EventArgs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.GameArgs))]
        void OnHit(object sender, Blackjack.Service.GameArgs e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/OnBet", ReplyAction="http://tempuri.org/IGameService/OnBetResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Card))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Face))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Suit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.EventArgs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.GameArgs))]
        void OnBet(object sender, Blackjack.Service.GameArgs e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/OnFold", ReplyAction="http://tempuri.org/IGameService/OnFoldResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Card))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Face))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Suit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.EventArgs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.GameArgs))]
        void OnFold(object sender, Blackjack.Service.GameArgs e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/OnNextTurn", ReplyAction="http://tempuri.org/IGameService/OnNextTurnResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Card))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Face))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Suit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.EventArgs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.GameArgs))]
        void OnNextTurn(object sender, Blackjack.Service.GameArgs e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/OnDeal", ReplyAction="http://tempuri.org/IGameService/OnDealResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Card))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Face))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Suit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.EventArgs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.GameArgs))]
        void OnDeal(object sender, Blackjack.Service.GameArgs e);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/OnNewTableCreated")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Table))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Player[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Card))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Face))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.Suit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.EventArgs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Blackjack.Service.GameArgs))]
        void OnNewTableCreated(object sender, Blackjack.Service.GameArgs e);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : Blackjack.Service.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.DuplexClientBase<Blackjack.Service.IGameService>, Blackjack.Service.IGameService {
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Register(string username, string pass) {
            base.Channel.Register(username, pass);
        }
        
        public System.Threading.Tasks.Task RegisterAsync(string username, string pass) {
            return base.Channel.RegisterAsync(username, pass);
        }
        
        public Blackjack.Service.Player Login(string username, string pass) {
            return base.Channel.Login(username, pass);
        }
        
        public System.Threading.Tasks.Task<Blackjack.Service.Player> LoginAsync(string username, string pass) {
            return base.Channel.LoginAsync(username, pass);
        }
        
        public Blackjack.Service.Player GetPlayerInfo(string username) {
            return base.Channel.GetPlayerInfo(username);
        }
        
        public System.Threading.Tasks.Task<Blackjack.Service.Player> GetPlayerInfoAsync(string username) {
            return base.Channel.GetPlayerInfoAsync(username);
        }
        
        public Blackjack.Service.Table[] ListTables() {
            return base.Channel.ListTables();
        }
        
        public System.Threading.Tasks.Task<Blackjack.Service.Table[]> ListTablesAsync() {
            return base.Channel.ListTablesAsync();
        }
        
        public void CreateTable() {
            base.Channel.CreateTable();
        }
        
        public System.Threading.Tasks.Task CreateTableAsync() {
            return base.Channel.CreateTableAsync();
        }
        
        public Blackjack.Service.Table JoinTable(string tableId) {
            return base.Channel.JoinTable(tableId);
        }
        
        public System.Threading.Tasks.Task<Blackjack.Service.Table> JoinTableAsync(string tableId) {
            return base.Channel.JoinTableAsync(tableId);
        }
        
        public Blackjack.Service.Table PlayerReady(string tableId) {
            return base.Channel.PlayerReady(tableId);
        }
        
        public System.Threading.Tasks.Task<Blackjack.Service.Table> PlayerReadyAsync(string tableId) {
            return base.Channel.PlayerReadyAsync(tableId);
        }
        
        public void Leave() {
            base.Channel.Leave();
        }
        
        public System.Threading.Tasks.Task LeaveAsync() {
            return base.Channel.LeaveAsync();
        }
        
        public void Bet(int amount) {
            base.Channel.Bet(amount);
        }
        
        public System.Threading.Tasks.Task BetAsync(int amount) {
            return base.Channel.BetAsync(amount);
        }
        
        public void Hit() {
            base.Channel.Hit();
        }
        
        public System.Threading.Tasks.Task HitAsync() {
            return base.Channel.HitAsync();
        }
        
        public void Fold() {
            base.Channel.Fold();
        }
        
        public System.Threading.Tasks.Task FoldAsync() {
            return base.Channel.FoldAsync();
        }
    }
}
